# -*- coding: utf-8 -*-
"""pose detection using YOLOv8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rWE4rt09E8qmoGrm2vph38CD9FDuV-8H
"""

!pip install tensorflow==2.13.1

!pip install ultralytics

from ultralytics import YOLO

# Load a model
model = YOLO('yolov8n-pose.yaml')  # build a new model from YAML
model = YOLO('yolov8n-pose.pt')  # load a pretrained model (recommended for training)
model = YOLO('yolov8n-pose.yaml').load('yolov8n-pose.pt')  # build from YAML and transfer weights

# Train the model
results = model.train(data='coco8-pose.yaml', epochs=100, imgsz=640)

# Load a model
model = YOLO('yolov8n-pose.pt')  # load an official model
model = YOLO('/content/runs/pose/train/weights/best.pt')  # load a custom model

# Validate the model
metrics = model.val()  # no arguments needed, dataset and settings remembered
metrics.box.map    # map50-95
metrics.box.map50  # map50
metrics.box.map75  # map75
metrics.box.maps   # a list contains map50-95 of each category

from ultralytics import YOLO

# Load a model
model = YOLO('yolov8n-pose.pt')  # load an official model
model = YOLO('/content/runs/pose/train/weights/best.pt')  # load a custom model

# Predict with the model
results = model('/content/WhatsApp Video 2023-11-23 at 4.19.23 PM.mp4').save()  # predict on an image

model.predict('/content/WhatsApp Video 2023-11-23 at 4.19.23 PM.mp4', save=True, imgsz=320, conf=0.5)

model.export(format='onnx')

